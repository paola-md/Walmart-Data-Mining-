# probabilidad de que theta sea menor a 0.1
pnorm(0.1, mu2, sigma2)
# probabilidad de que theta sea menor a 0.1
print("Caso 1")
pnorm(0.1, mu1, sigma1)
###### ----- Simulacion para caso 2 ----- ######
mu2 <- 9/92.5
sigma2 <- mu2/92.5
# probabilidad de que theta sea menor a 0.1
print("Caso 2")
pnorm(0.1, mu2, sigma2)
print("Caso 1")
pnorm(0.1, mu1, sigma1)
mu1 <- 16/136.5
sigma1 <- mu1/136.5
# probabilidad de que theta sea menor a 0.1
print("Caso 1")
pnorm(0.1, mu1, sigma1)
mu2 <- 9/92.5
sigma2 <- mu2/92.5
# probabilidad de que theta sea menor a 0.1
print("Caso 2")
pnorm(0.1, mu2, sigma2)
N = 14; z = 11; a = 1; b = 1
base <- ggplot(data_frame(x = c(0, 1)), aes(x))
p1 <- base +
stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b), #inicial
aes(colour = "inicial"), show.legend = FALSE) +
stat_function(fun = dbeta, args = list(shape1 = z + 1, shape2 = N - z + 1), #verosimilitud
aes(colour = "verosimilitud"), show.legend = FALSE) +
stat_function(fun = dbeta, args = list(shape1 = a + z, shape2 = N - z + b), #posterior
aes(colour = "posterior"), show.legend = FALSE) +
labs(y = "", colour = "", x = expression(theta))
N = 14; z = 11; a = 100; b = 100
p2 <- base +
stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b),
aes(colour = "inicial")) +
stat_function(fun = dbeta, args = list(shape1 = z + 1, shape2 = N - z + 1),
aes(colour = "verosimilitud")) +
stat_function(fun = dbeta, args = list(shape1 = a + z, shape2 = N - z + b),
aes(colour = "posterior")) +
labs(y = "", colour = "", x = expression(theta))
grid.arrange(p1, p2, nrow = 1, widths = c(0.38, 0.62))
library("tidyverse")
N = 14; z = 11; a = 1; b = 1
base <- ggplot(data_frame(x = c(0, 1)), aes(x))
p1 <- base +
stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b), #inicial
aes(colour = "inicial"), show.legend = FALSE) +
stat_function(fun = dbeta, args = list(shape1 = z + 1, shape2 = N - z + 1), #verosimilitud
aes(colour = "verosimilitud"), show.legend = FALSE) +
stat_function(fun = dbeta, args = list(shape1 = a + z, shape2 = N - z + b), #posterior
aes(colour = "posterior"), show.legend = FALSE) +
labs(y = "", colour = "", x = expression(theta))
N = 14; z = 11; a = 100; b = 100
p2 <- base +
stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b),
aes(colour = "inicial")) +
stat_function(fun = dbeta, args = list(shape1 = z + 1, shape2 = N - z + 1),
aes(colour = "verosimilitud")) +
stat_function(fun = dbeta, args = list(shape1 = a + z, shape2 = N - z + b),
aes(colour = "posterior")) +
labs(y = "", colour = "", x = expression(theta))
grid.arrange(p1, p2, nrow = 1, widths = c(0.38, 0.62))
library(gridExtra)
library(grid)
N = 14; z = 11; a = 1; b = 1
base <- ggplot(data_frame(x = c(0, 1)), aes(x))
p1 <- base +
stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b), #inicial
aes(colour = "inicial"), show.legend = FALSE) +
stat_function(fun = dbeta, args = list(shape1 = z + 1, shape2 = N - z + 1), #verosimilitud
aes(colour = "verosimilitud"), show.legend = FALSE) +
stat_function(fun = dbeta, args = list(shape1 = a + z, shape2 = N - z + b), #posterior
aes(colour = "posterior"), show.legend = FALSE) +
labs(y = "", colour = "", x = expression(theta))
N = 14; z = 11; a = 100; b = 100
p2 <- base +
stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b),
aes(colour = "inicial")) +
stat_function(fun = dbeta, args = list(shape1 = z + 1, shape2 = N - z + 1),
aes(colour = "verosimilitud")) +
stat_function(fun = dbeta, args = list(shape1 = a + z, shape2 = N - z + b),
aes(colour = "posterior")) +
labs(y = "", colour = "", x = expression(theta))
grid.arrange(p1, p2, nrow = 1, widths = c(0.38, 0.62))
library(gridExtra)
library(grid)
N = 14; z = 11; a = 1; b = 1
base <- ggplot(data_frame(x = c(0, 1)), aes(x))
p1 <- base +
stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b), #inicial
aes(colour = "inicial"), show.legend = FALSE) +
stat_function(fun = dbeta, args = list(shape1 = z + 1, shape2 = N - z + 1), #verosimilitud
aes(colour = "verosimilitud"), show.legend = FALSE) +
stat_function(fun = dbeta, args = list(shape1 = a + z, shape2 = N - z + b), #posterior
aes(colour = "posterior"), show.legend = FALSE) +
labs(y = "", colour = "", x = expression(theta))
N = 14; z = 11; a = 100; b = 100
p2 <- base +
stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b),
aes(colour = "inicial")) +
stat_function(fun = dbeta, args = list(shape1 = z + 1, shape2 = N - z + 1),
aes(colour = "verosimilitud")) +
stat_function(fun = dbeta, args = list(shape1 = a + z, shape2 = N - z + b),
aes(colour = "posterior")) +
labs(y = "", colour = "", x = expression(theta))
grid.arrange(p1, p2, nrow = 1, widths = c(0.38, 0.62))
View(p1)
p1
p2
grid.arrange(p1, p2, nrow = 1, widths = c(0.38, 0.62))
library(shiny); runApp('/media/Box/Aprendizaje_Maquina/Projecto/BAF_shiny.R')
beta(1,1)
beta(0.4,0.9)
choose(66,64)
devtools::install_github('diegovalle/mxmaps')
install.packages(c("bayesm", "bayestestR", "callr", "covr", "data.table", "digest", "DT", "funModeling", "future", "ggvis", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "insight", "jomo", "kernlab", "knitr", "later", "pkgbuild", "plotly", "promises", "purrr", "qvcalc", "R6", "RcppArmadillo", "rlang", "rmarkdown", "roxygen2", "rvest", "shiny", "sp", "testthat", "tinytex", "xfun"))
install.packages(c("bayesm", "bayestestR", "callr", "covr", "data.table", "digest", "DT", "funModeling", "future", "ggvis", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "insight", "jomo", "kernlab", "knitr", "later", "pkgbuild", "plotly", "promises", "purrr", "qvcalc", "R6", "RcppArmadillo", "rlang", "rmarkdown", "roxygen2", "rvest", "shiny", "sp", "testthat", "tinytex", "xfun"))
install.packages(c("bayesm", "bayestestR", "callr", "covr", "data.table", "digest", "DT", "funModeling", "future", "ggvis", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "insight", "jomo", "kernlab", "knitr", "later", "pkgbuild", "plotly", "promises", "purrr", "qvcalc", "R6", "RcppArmadillo", "rlang", "rmarkdown", "roxygen2", "rvest", "shiny", "sp", "testthat", "tinytex", "xfun"))
install.packages(c("bayesm", "bayestestR", "callr", "covr", "data.table", "digest", "DT", "funModeling", "future", "ggvis", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "insight", "jomo", "kernlab", "knitr", "later", "pkgbuild", "plotly", "promises", "purrr", "qvcalc", "R6", "RcppArmadillo", "rlang", "rmarkdown", "roxygen2", "rvest", "shiny", "sp", "testthat", "tinytex", "xfun"))
devtools::install_github('diegovalle/mxmaps')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
devtools::install_github('diegovalle/mxmaps')
install.packages("tidyverse")
devtools::install_github('diegovalle/mxmaps')
install.packages("devtools")
devtools::install_github('diegovalle/mxmaps')
library(mxmaps)
install.packages(c("R2OpenBUGS", "R2jags"))
install.packages("corrplot")
sample?
)
?sample
sample(1:10, replace = FALSE)
sample(1:14,1, replace = FALSE)
sample(1:14,1, replace = FALSE)
sample(1:14,1, replace = FALSE)
sample(1:14,1, replace = FALSE)
library(ggplot2)
library(dplyr)
library(tidyverse)
# Para ejectuar este archivo, por favor situarse en la ruta donde esta el archivo csv con los datos
# Cargamos los datos limpios
# Nota: modificar en la ruta donde almacenan los datos
df1 <- read_csv("/media/Box/Aprendizaje_Maquina/Projecto/BAF_06209_P2.csv")
# Aqui especificamos cuales con las variables categoricas
# Nota: la lista de los nombres de estas variables se tiene que escribir en la linea 32
df1$CLASS_PEN_BAF_HABS_COAXFO <- as.character(df1$CLASS_PEN_BAF_HABS_COAXFO)
df1$IS_PEN_BAF_HABS_COAXFO <- as.character(df1$IS_PEN_BAF_HABS_COAXFO)
df1$NUM_OPS <- as.character(df1$NUM_OPS)
# Cargamos la base global
df_EDA <- read_csv("/media/Box/Aprendizaje_Maquina/Projecto/BAF_06209_EDA.csv",
col_types = cols(CLASS_PEN_BAF_HABS_COAXFO = col_character(),
CLASS_PEN_BAF_HOGS_COAXFO = col_character(),
IS_PEN_BAF_HABS_COAXFO = col_character(),
NUM_OPS = col_character(), REG_SOCIOECONOM = col_character()))
df_EDA %>% select(df_EDA$PEN_BAF_HABS_COAXFO, df_EDA$HOGARES,df_EDA$POBLACION) %>%
group_by(df_EDA$PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(df_EDA$HOGARES), Porcentaje_Poblacion = sum(df_EDA$POBLACION) )
df_EDA %>% select(df_EDA$PEN_BAF_HABS_COAXFO,df_EDA$POBLACION) %>%
group_by(df_EDA$PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(df_EDA$POBLACION))
df_EDA %>% select(df_EDA$PEN_BAF_HABS_COAXFO,df_EDA$POBLACION)
df_EDA %>% select(df_EDA$PEN_BAF_HABS_COAXFO,df_EDA$POBLACION)
View(df_EDA)
names(df_EDA)
df_EDA %>% select(df_EDA$POBLACION)
df_EDA %>% select(POBLACION)
df_EDA %>% sele
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION)
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO)
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(df_EDA$POBLACION)/1000000)
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum())
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(POBLACION))
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(POBLACION)/sum(df_EDA$CLASS_PEN_BAF_HABS_COAXF)*100)
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(POBLACION))%>%
ungroup() %>% mutate(p_pob = Porcentaje_Hogares/ sum(Porcentaje_Hogares) )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(POBLACION))%>%
ungroup() %>% mutate(p_pob = Porcentaje_Hogares/ sum(Porcentaje_Hogares)*100 )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Pob = sum(POBLACION))%>%
ungroup() %>% mutate(p_pob = Porcentaje_Pob/ sum(Porcentaje_Pob)*100 )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,HOGARES) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(HOGARES))%>%
ungroup() %>% mutate(p_pob = Porcentaje_Hogares/ sum(Porcentaje_Hogares)*100 )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Pob = sum(POBLACION))%>%
ungroup() %>% mutate(p_pob = Porcentaje_Pob/ sum(Porcentaje_Pob)*100 )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,HOGARES) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(HOGARES))%>%
ungroup() %>% mutate(p_pob = Porcentaje_Hogares/ sum(Porcentaje_Hogares)*100 )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Pob = sum(POBLACION))%>%
ungroup() %>% mutate(p_pob = Porcentaje_Pob/ sum(Porcentaje_Pob)*100 )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,HOGARES) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(HOGARES))%>%
ungroup() %>% mutate(p_hogs = Porcentaje_Hogares/ sum(Porcentaje_Hogares)*100 )
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS, color=df_EDA$CLASS_PEN_BAF_HABS_COAXFO, shape=cyl)) +
geom_point() +
geom_smooth(method=lm)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS, color=df_EDA$CLASS_PEN_BAF_HABS_COAXFO, shape=df_EDA$CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS, color=df_EDA$CLASS_PEN_BAF_HABS_COAXFO, shape=df_EDA$CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS, shape=df_EDA$CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
=
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
facet_grid(~df_EDA$PEN_BAF_HABS_COAXFO)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
facet_grid(~df_EDA$CLASS_PEN_BAF_HABS_COAXFO)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
facet_wrap(~df_EDA$CLASS_PEN_BAF_HABS_COAXFO)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")
ggplot(df_EDA, aes(x=log(df_EDA$PEN_BAF_HABS_COAXFO), y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")
ggplot(df_EDA, aes(x=log(df_EDA$PEN_BAF_HABS_COAXFO+0.1), y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")
ggplot(df_EDA, aes(x=log(df_EDA$PEN_BAF_HABS_COAXFO+0.1), y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,cyl=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,cyl=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
ylim(0, 750000)
ggplot(df_EDA, aes(y=df_EDA$PEN_BAF_HABS_COAXFO, x=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,cyl=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
ylim(0, 750000)
ggplot(df_EDA, aes(y=df_EDA$PEN_BAF_HABS_COAXFO, x=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,cyl=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
ylim(0, 50)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,cyl=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
ylim(0, 50)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,shape=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densida de habitantes")+
ylim(0, 750000)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HOGS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,shape=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densidad de hogares")+
ylim(0, 750000)
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,shape=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes")
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,shape=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes") + geom_rug()
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,shape=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes")
ggplot(df_EDA, aes(x=df_EDA$PEN_BAF_HABS_COAXFO, y=df_EDA$DENS_HABS,color=CLASS_PEN_BAF_HABS_COAXFO,shape=CLASS_PEN_BAF_HABS_COAXFO)) +
geom_point() +
geom_smooth(method=lm)+ theme_classic() + theme(legend.title = element_blank())+
labs(x = "Penetración BAF" ,y = "Densidad Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes")+
ylim(0,1000000)
ggplot(df_EDA, aes(DENS_HABS, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Densidad Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes")+
geom_density()
ggplot(df_EDA, aes(log(DENS_HABS), colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Densidad Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes")+
geom_density()
ggplot(df_EDA, aes(log(DENS_HABS), colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Log-Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes")+
geom_density()
ggplot(df_EDA, aes(log(DENS_HABS), colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Log-Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes")+
geom_density(alpha = 0.1)
ggplot(df_EDA, aes(log(DENS_HABS), colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Log-Habitantes/KM^2", title = "Relación penetracion y densidad de habitantes")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(log(DENS_HABS), colour = CLASS_PEN_BAF_HOGS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Log-Hogares/KM^2", title = "Relación penetracion y densidad de hogares")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(DENS_HABS, colour = CLASS_PEN_BAF_HOGS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Log-Hogares/KM^2", title = "Relación penetracion y densidad de hogares")+
geom_density(alpha = 0.9) + facet_grid(~CLASS_PEN_BAF_HOGS_COAXFO)
ggplot(df_EDA, aes(log(DENS_HABS), colour = CLASS_PEN_BAF_HOGS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Log-Hogares/KM^2", title = "Relación penetracion y densidad de hogares")+
geom_density(alpha = 0.9) + facet_grid(~CLASS_PEN_BAF_HOGS_COAXFO)
ggplot(df_EDA, aes(x =df_EDA$CLASS_PEN_BAF_HABS_COAXFO ,
y = df_EDA$DENS_HOGS, color= df_EDA$CLASS_PEN_BAF_HABS_COAXFO)) +
geom_boxplot() + theme_classic() + theme(legend.title = element_blank())+
theme(legend.position="none")+
#scale_x_discrete(name ="Penetración BAF", limits=c("Nula","Baja","Media", "Alta", "Muy Alta"))+
labs(x = "Penetración BAF" ,y = "Densidad de Hogares/KM^2", title = "Relación penetracion y densidad de hogares")+
scale_x_discrete(labels=c("0" = "Nula", "1" = "Baja", "2" = "Media", "3" = "Alta", "4" = "Muy Alta"))
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,HOGARES) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Hogares = sum(HOGARES))%>%
ungroup() %>% mutate(p_hogs = Porcentaje_Hogares/ sum(Porcentaje_Hogares)*100 )+coord_flip()
ggplot(df_EDA, aes(x =df_EDA$CLASS_PEN_BAF_HABS_COAXFO ,
y = df_EDA$DENS_HOGS, color= df_EDA$CLASS_PEN_BAF_HABS_COAXFO)) +
geom_boxplot() + theme_classic() + theme(legend.title = element_blank())+
theme(legend.position="none")+
#scale_x_discrete(name ="Penetración BAF", limits=c("Nula","Baja","Media", "Alta", "Muy Alta"))+
labs(x = "Penetración BAF" ,y = "Densidad de Hogares/KM^2", title = "Relación penetracion y densidad de hogares")+
scale_x_discrete(labels=c("0" = "Nula", "1" = "Baja", "2" = "Media", "3" = "Alta", "4" = "Muy Alta"))+coord_flip()
ggplot(df_EDA, aes(x =df_EDA$CLASS_PEN_BAF_HABS_COAXFO ,
y = df_EDA$DENS_HOGS, color= df_EDA$CLASS_PEN_BAF_HABS_COAXFO)) +
geom_boxplot() + theme_classic() + theme(legend.title = element_blank())+
theme(legend.position="none")+
#scale_x_discrete(name ="Penetración BAF", limits=c("Nula","Baja","Media", "Alta", "Muy Alta"))+
labs(x = "Penetración BAF" ,y = "Densidad de Hogares/KM^2", title = "Relación entre densidad de hogares y penetración")+
scale_x_discrete(labels=c("0" = "Nula", "1" = "Baja", "2" = "Media", "3" = "Alta", "4" = "Muy Alta"))+coord_flip()
ggplot(df_EDA, aes(x =df_EDA$CLASS_PEN_BAF_HOGS_COAXFO ,
y = df_EDA$DENS_HOGS, color= df_EDA$CLASS_PEN_BAF_HOGS_COAXFO)) +
geom_boxplot() + theme_classic() + theme(legend.title = element_blank())+
theme(legend.position="none")+
#scale_x_discrete(name ="Penetración BAF", limits=c("Nula","Baja","Media", "Alta", "Muy Alta"))+
labs(x = "Penetración BAF" ,y = "Densidad de Hogares/KM^2", title = "Relación entre densidad de hogares y penetración")+
scale_x_discrete(labels=c("0" = "Nula", "1" = "Baja", "2" = "Media", "3" = "Alta", "4" = "Muy Alta"))+coord_flip()
ggplot(df_EDA, aes(x =df_EDA$CLASS_PEN_BAF_HOGS_COAXFO ,
y = df_EDA$DENS_HOGS, color= df_EDA$CLASS_PEN_BAF_HOGS_COAXFO)) +
geom_boxplot() + theme_classic() + theme(legend.title = element_blank())+
theme(legend.position="none")+
#scale_x_discrete(name ="Penetración BAF", limits=c("Nula","Baja","Media", "Alta", "Muy Alta"))+
labs(x = "Penetración BAF" ,y = "Densidad de Hogares/KM^2", title = "Relación entre densidad de hogares y \n penetración")+
scale_x_discrete(labels=c("0" = "Nula", "1" = "Baja", "2" = "Media", "3" = "Alta", "4" = "Muy Alta"))+coord_flip()
ggplot(df_EDA, aes(x =df_EDA$CLASS_PEN_BAF_HABS_COAXFO ,
y = df_EDA$DENS_HOGS, color= df_EDA$CLASS_PEN_BAF_HOGS_COAXFO)) +
geom_boxplot() + theme_classic() + theme(legend.title = element_blank())+
theme(legend.position="none")+
#scale_x_discrete(name ="Penetración BAF", limits=c("Nula","Baja","Media", "Alta", "Muy Alta"))+
labs(x = "Penetración BAF" ,y = "Densidad de Hogares/KM^2", title = "Relación entre densidad de hogares y \n penetración")+
scale_x_discrete(labels=c("0" = "Nula", "1" = "Baja", "2" = "Media", "3" = "Alta", "4" = "Muy Alta"))+coord_flip()
ggplot(df_EDA, aes(x =df_EDA$CLASS_PEN_BAF_HABS_COAXFO ,
y = df_EDA$DENS_HOGS, color= df_EDA$CLASS_PEN_BAF_HOGS_COAXFO)) +
geom_boxplot() + theme_classic() + theme(legend.title = element_blank())+
theme(legend.position="none")+
#scale_x_discrete(name ="Penetración BAF", limits=c("Nula","Baja","Media", "Alta", "Muy Alta"))+
labs(x = "Penetración BAF" ,y = "Densidad de Hogares/KM^2", title = "Relación entre densidad de hogares y \n penetración")+
scale_x_discrete(labels=c("0" = "Nula", "1" = "Baja", "2" = "Media", "3" = "Alta", "4" = "Muy Alta"))+coord_flip()
ggplot(df_EDA, aes(x =df_EDA$CLASS_PEN_BAF_HABS_COAXFO ,
y = df_EDA$DENS_HABS, color= df_EDA$CLASS_PEN_BAF_HABS_COAXFO)) +
geom_boxplot() + theme_classic() + theme(legend.title = element_blank())+
theme(legend.position="none")+
#scale_x_discrete(name ="Penetración BAF", limits=c("Nula","Baja","Media", "Alta", "Muy Alta"))+
labs(x = "Penetración BAF" ,y = "Densidad de Habitantes/KM^2", title = "Relación entre densidad de habitantes y \n penetración")+
scale_x_discrete(labels=c("0" = "Nula", "1" = "Baja", "2" = "Media", "3" = "Alta", "4" = "Muy Alta"))+coord_flip()
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Porcentaje de poblacion que ganaba hasta 2 salarios minimos", title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9) + facet_grid(~CLASS_PEN_BAF_HABS_COAXFO)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() + theme(legend.title = element_blank())+
labs(x = "Porcentaje de poblacion que ganaba hasta 2 salarios minimos", title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015", title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos", fill = "Penetración BAF")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos", fill = "Penetración BAF")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)+ scale_fill_discrete(name = "Penetracion", labels = c("Nula","Baja","Media", "Alta", "Muy Alta"))
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)+
scale_fill_discrete(name = "Penetracion", labels = c("Nula","Baja","Media", "Alta", "Muy Alta"))
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO, fill =c("Nula","Baja","Media", "Alta", "Muy Alta")))
+ theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO))
+ theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)+
scale_fill_discrete(name = "Penetracion", labels = c("Nula","Baja","Media", "Alta", "Muy Alta"))
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO))
+ theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)+
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO))
+ theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)+
scale_fill_discrete(name = "Penetracion", labels = c("Nula","Baja","Media", "Alta", "Muy Alta"))
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos", fill = "Penetracion")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +theme(legend.title = "Penetración")
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)+
scale_fill_discrete(name = "Penetracion", labels = c("Nula","Baja","Media", "Alta", "Muy Alta"))
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +theme(legend.title = "Penetración")
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +theme(legend.title = element_blank())
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +theme(legend.title = element_blank())+
labs(x = "% poblacion en municioios con ingreso de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +theme(legend.title = element_blank())+
labs(x = "% poblacion en municioios con ingreso \n de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Pob = sum(POBLACION))%>%
ungroup() %>% mutate(mun = count() )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Pob = sum(POBLACION))%>%
ungroup() %>% mutate(mun = count(CLASS_PEN_BAF_HABS_COAXFO) )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Pob = sum(POBLACION))%>%
ungroup() %>% mutate(mun = count(POBLACION) )
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Pob = count(POBLACION))
df_EDA %>% select(CLASS_PEN_BAF_HABS_COAXFO,POBLACION) %>%
group_by(CLASS_PEN_BAF_HABS_COAXFO) %>%  summarize(Porcentaje_Pob = count(CLASS_PEN_BAF_HABS_COAXFO))
table(df_EDA$CLASS_PEN_BAF_HABS_COAXFO)
ggplot(df_EDA, aes(PO2SM, colour = CLASS_PEN_BAF_HABS_COAXFO)) + theme_classic() +theme(legend.title = element_blank())+
labs(x = "% poblacion en municipios con ingreso \n de hasta 2 salarios mínimos en 2015",
title = "Relación penetracion y salarios minimos")+
geom_density(alpha = 0.9)
source("./../code/Utils.R")
source("/home/cesar/Escritorio/Walmart-Data-Mining-/build/code/Utils.R")
source("/home/cesar/Escritorio/Walmart-Data-Mining-/build/code/00-load.R")
source("/home/cesar/Escritorio/Walmart-Data-Mining-/build/compresion_datos/Utils.R")
source("/home/cesar/Escritorio/Walmart-Data-Mining-/build/comprension_datos/Utils.R")
source("/home/cesar/Escritorio/Walmart-Data-Mining-/build/comprension_datos/Utils.R")
source("/home/cesar/Escritorio/Walmart-Data-Mining-/build/comprension_datos/00-load.R")
source("/home/cesar/Escritorio/Walmart-Data-Mining-/build/comprension_datos/00-load.R")
source("/home/cesar/Escritorio/Walmart-Data-Mining-/build/comprension_datos/00-load.R")
install.packages("feather")
setwd("~/Escritorio/Walmart-Data-Mining-/data")
library(feather)
library(readr)
# Abrimos los archivos descargados
test <- read_csv("test.csv")
train <- read_csv("train.csv")
# Escribe los archivos descargados en formato feather
write_feather(train, "train.feather")
write_feather(test, "test.feather")
